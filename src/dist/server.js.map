{"version":3,"sources":["../es6/server.js"],"names":["Message","require","Session","Server","socket","options","_socket","_sessions","Map","_port","optionNames","port","_host","host","self","listen","console","log","address","on","client","_connection","close","cliSocket","session","welcomMsg","getId","welcomeMsg","_addSession","send","_text","has","get","destroyed","destroy","set","module","exports"],"mappings":";;;;;;AAAA,IAAMA,UAAUC,QAAQ,cAAR,CAAhB;AAAA,IAAyCC,UAAUD,QAAQ,cAAR,CAAnD;;IACME,M;AACJ,kBAAYC,MAAZ,EAAoBC,OAApB,EAA4B;AAAA;;AAC1B,SAAKC,OAAL,GAAeF,MAAf;AACA,SAAKG,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AACA,QAAGH,OAAH,EAAW;AACT,WAAKI,KAAL,GAAcJ,QAAQF,OAAOO,WAAP,CAAmBC,IAA3B,CAAD,GAAqCN,QAAQF,OAAOO,WAAP,CAAmBC,IAA3B,CAArC,GAAwER,OAAOQ,IAA5F;AACA,WAAKC,KAAL,GAAcP,QAAQF,OAAOO,WAAP,CAAmBG,IAA3B,CAAD,GAAqCR,QAAQF,OAAOO,WAAP,CAAmBG,IAA3B,CAArC,GAAwEV,OAAOU,IAA5F;AACD,KAHD,MAII;AACF,WAAKJ,KAAL,GAAaN,OAAOQ,IAApB;AACA,WAAKC,KAAL,GAAaT,OAAOU,IAApB;AACD;AACF;;;;0BACI;AAAA;;AACH,UAAIC,OAAO,IAAX;AACAA,WAAKR,OAAL,CAAaS,MAAb,CAAoBD,KAAKL,KAAzB,EAAgCK,KAAKF,KAArC,EAA4C,CAA5C,EAA+C,YAAI;AACjDI,gBAAQC,GAAR,aAAsBH,KAAKR,OAAL,CAAaY,OAAb,GAAuBA,OAA7C,SAAwDJ,KAAKR,OAAL,CAAaY,OAAb,GAAuBP,IAA/E;AACA,cAAKL,OAAL,CAAaa,EAAb,CAAgB,YAAhB,EAA8B,UAACC,MAAD,EAAU;AAACN,eAAKO,WAAL,CAAiBD,MAAjB;AAA0B,SAAnE;AACD,OAHD;AAID;;;6BACO;AAAA;;AACN,WAAKd,OAAL,CAAagB,KAAb,CAAmB,YAAI;AACrBN,gBAAQC,GAAR,aAAsB,OAAKX,OAAL,CAAaY,OAAb,GAAuBA,OAA7C,SAAwD,OAAKZ,OAAL,CAAaY,OAAb,GAAuBP,IAA/E;AACD,OAFD;AAGD;;;gCACWY,S,EAAU;AACpBP,cAAQC,GAAR,uBAAgCM,UAAUL,OAAV,GAAoBA,OAApD,SAA+DK,UAAUL,OAAV,GAAoBP,IAAnF;AACA,UAAIa,UAAU,IAAItB,OAAJ,CAAYqB,SAAZ,CAAd;AAAA,UAAsCE,YAAY,IAAIzB,OAAJ,MAAewB,QAAQE,KAAR,EAAf,EAAkC,MAAlC,EAA0CvB,OAAOwB,UAAjD,CAAlD;AACA,WAAKC,WAAL,CAAiBJ,OAAjB;AACAA,cAAQK,IAAR,CAAaJ,UAAUK,KAAvB;AACD;;;gCACWN,O,EAAQ;AAClB,UAAG,KAAKjB,SAAL,CAAewB,GAAf,CAAmBP,QAAQE,KAAR,EAAnB,KAAuC,CAAC,KAAKnB,SAAL,CAAeyB,GAAf,CAAmBR,QAAQE,KAAR,EAAnB,EAAoCO,SAA/E,EAAyF;AACvF,aAAK1B,SAAL,CAAeyB,GAAf,CAAmBR,QAAQE,KAAR,EAAnB,EAAoCQ,OAApC;AACD;AACD,WAAK3B,SAAL,CAAe4B,GAAf,CAAmBX,QAAQE,KAAR,EAAnB,EAAoCF,OAApC;AACD;;;;;;AAEHrB,OAAOQ,IAAP,GAAc,IAAd;AACAR,OAAOU,IAAP,GAAc,WAAd;AACAV,OAAOwB,UAAP,GAAoB,YAApB;AACAxB,OAAOO,WAAP,GAAqB,EAAEC,MAAM,MAAR,EAAgBE,MAAM,MAAtB,EAArB;AACAuB,OAAOC,OAAP,GAAiBlC,MAAjB","file":"server.js","sourcesContent":["const Message = require('./message.js'), Session = require('./session.js');\r\nclass Server{\r\n  constructor(socket, options){\r\n    this._socket = socket;\r\n    this._sessions = new Map();\r\n    if(options){\r\n      this._port = (options[Server.optionNames.port])?  options[Server.optionNames.port] : Server.port;\r\n      this._host = (options[Server.optionNames.host])?  options[Server.optionNames.host] : Server.host;\r\n    }\r\n    else{\r\n      this._port = Server.port;\r\n      this._host = Server.host;\r\n    }\r\n  }\r\n  run(){\r\n    let self = this;\r\n    self._socket.listen(self._port, self._host, 5, ()=>{\r\n      console.log(`server(${self._socket.address().address}:${self._socket.address().port}) bound`);\r\n      this._socket.on('connection', (client)=>{self._connection(client);});\r\n    });\r\n  }\r\n  _close(){\r\n    this._socket.close(()=>{\r\n      console.log(`server(${this._socket.address().address}:${this._socket.address().port}) closed`);\r\n    });\r\n  }\r\n  _connection(cliSocket){\r\n    console.log(`connected client(${cliSocket.address().address}:${cliSocket.address().port})`);\r\n    let session = new Session(cliSocket), welcomMsg = new Message(`${session.getId()}`, 'host', Server.welcomeMsg);\r\n    this._addSession(session);\r\n    session.send(welcomMsg._text);\r\n  }\r\n  _addSession(session){\r\n    if(this._sessions.has(session.getId()) && !this._sessions.get(session.getId()).destroyed){\r\n      this._sessions.get(session.getId()).destroy();\r\n    }\r\n    this._sessions.set(session.getId(), session);\r\n  }\r\n}\r\nServer.port = 1000;\r\nServer.host = '127.0.0.1';\r\nServer.welcomeMsg = 'Welcome!!!';\r\nServer.optionNames = { port: 'port', host: 'host' };\r\nmodule.exports = Server;"]}