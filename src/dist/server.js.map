{"version":3,"sources":["../es6/server.js"],"names":["ChattingManager","require","Server","socket","options","_socket","_chattingManager","_port","port","_host","host","_backlog","backlog","optionNames","listen","console","log","address","on","client","_connection","close","clientSocket","enterClient","module","exports"],"mappings":";;;;;;AAAA,IAAMA,kBAAkBC,QAAQ,uBAAR,CAAxB;;IACMC,M;AACJ,kBAAYC,MAAZ,EAAoBC,OAApB,EAA4B;AAAA;;AAC1B,SAAKC,OAAL,GAAeF,MAAf;AACA,SAAKG,gBAAL,GAAwB,IAAIN,eAAJ,EAAxB;AACF,SAAKO,KAAL,GAAaL,OAAOM,IAApB;AACA,SAAKC,KAAL,GAAaP,OAAOQ,IAApB;AACA,SAAKC,QAAL,GAAgBT,OAAOU,OAAvB;AACA,QAAGR,OAAH,EAAW;AACV,UAAGA,QAAQF,OAAOW,WAAP,CAAmBL,IAA3B,CAAH,EAAqC,KAAKD,KAAL,GAAaH,QAAQF,OAAOW,WAAP,CAAmBL,IAA3B,CAAb;AACrC,UAAGJ,QAAQF,OAAOW,WAAP,CAAmBH,IAA3B,CAAH,EAAqC,KAAKD,KAAL,GAAaL,QAAQF,OAAOW,WAAP,CAAmBH,IAA3B,CAAb;AACrC,UAAGN,QAAQF,OAAOW,WAAP,CAAmBD,OAA3B,CAAH,EAAwC,KAAKD,QAAL,GAAgBP,QAAQF,OAAOW,WAAP,CAAmBD,OAA3B,CAAhB;AACxC;AACA;;;;0BACI;AAAA;;AACH,WAAKP,OAAL,CAAaS,MAAb,CAAoB,KAAKP,KAAzB,EAAgC,KAAKE,KAArC,EAA4C,KAAKE,QAAjD,EAA2D,YAAI;AAC7DI,gBAAQC,GAAR,aAAsB,MAAKX,OAAL,CAAaY,OAAb,GAAuBA,OAA7C,SAAwD,MAAKZ,OAAL,CAAaY,OAAb,GAAuBT,IAA/E;AACA,cAAKH,OAAL,CAAaa,EAAb,CAAgB,YAAhB,EAA8B,UAACC,MAAD,EAAU;AAAC,gBAAKC,WAAL,CAAiBD,MAAjB;AAA0B,SAAnE;AACD,OAHD;AAID;;;6BACO;AAAA;;AACN,WAAKd,OAAL,CAAagB,KAAb,CAAmB,YAAI;AACrBN,gBAAQC,GAAR,aAAsB,OAAKX,OAAL,CAAaY,OAAb,GAAuBA,OAA7C,SAAwD,OAAKZ,OAAL,CAAaY,OAAb,GAAuBT,IAA/E;AACD,OAFD;AAGD;;;gCACWc,Y,EAAa;AACvBP,cAAQC,GAAR,uBAAgCM,aAAaL,OAAb,GAAuBA,OAAvD,SAAkEK,aAAaL,OAAb,GAAuBT,IAAzF;AACA,WAAKF,gBAAL,CAAsBiB,WAAtB,CAAkCD,YAAlC;AACD;;;;;;AAEHpB,OAAOM,IAAP,GAAc,IAAd;AACAN,OAAOQ,IAAP,GAAc,WAAd;AACAR,OAAOU,OAAP,GAAiB,CAAjB;AACAV,OAAOW,WAAP,GAAqB,EAAEL,MAAM,MAAR,EAAgBE,MAAM,MAAtB,EAA8BE,SAAS,SAAvC,EAArB;AACAY,OAAOC,OAAP,GAAiBvB,MAAjB","file":"server.js","sourcesContent":["const ChattingManager = require('./chatting-manager.js');\r\nclass Server{\r\n  constructor(socket, options){\r\n    this._socket = socket;\r\n    this._chattingManager = new ChattingManager();\r\n\t\tthis._port = Server.port;\r\n\t\tthis._host = Server.host;\r\n\t\tthis._backlog = Server.backlog;\r\n\t\tif(options){\r\n\t\t\tif(options[Server.optionNames.port]) this._port = options[Server.optionNames.port];\r\n\t\t\tif(options[Server.optionNames.host]) this._host = options[Server.optionNames.host];\r\n\t\t\tif(options[Server.optionNames.backlog]) this._backlog = options[Server.optionNames.backlog];\r\n\t\t}\r\n  }\r\n  run(){\r\n    this._socket.listen(this._port, this._host, this._backlog, ()=>{\r\n      console.log(`server(${this._socket.address().address}:${this._socket.address().port}) bound`);\r\n      this._socket.on('connection', (client)=>{this._connection(client);});\r\n    });\r\n  }\r\n  _close(){\r\n    this._socket.close(()=>{\r\n      console.log(`server(${this._socket.address().address}:${this._socket.address().port}) closed`);\r\n    });\r\n  }\r\n  _connection(clientSocket){\r\n    console.log(`connected client(${clientSocket.address().address}:${clientSocket.address().port})`);\r\n    this._chattingManager.enterClient(clientSocket);\r\n  }\r\n}\r\nServer.port = 1000;\r\nServer.host = '127.0.0.1';\r\nServer.backlog = 5;\r\nServer.optionNames = { port: 'port', host: 'host', backlog: 'backlog' };\r\nmodule.exports = Server;\r\n"]}