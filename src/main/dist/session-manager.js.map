{"version":3,"sources":["../es6/session-manager.js"],"names":["Session","require","_sessions","Symbol","_partnerMap","SessionManager","Map","cliSocket","events","session","set","id","partnerId","_findPartner","SERVERID","sessionId","get","close","delete","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,UAAUC,QAAQ,cAAR,CAAhB;AACA,IAAMC,YAAYC,QAAlB;AACA,IAAMC,cAAcD,QAApB;;IACME,c;AACL,2BAAa;AAAA;;AACZ,OAAKH,SAAL,IAAkB,IAAII,GAAJ,EAAlB;AACA,OAAKF,WAAL,IAAoB,IAAIE,GAAJ,EAApB;AACA;;;;6BACUC,S,EAAWC,M,EAAO;AAC5B,OAAIC,UAAU,IAAIT,OAAJ,CAAYO,SAAZ,EAAuBC,MAAvB,CAAd;AACA,QAAKN,SAAL,EAAgBQ,GAAhB,CAAoBD,QAAQE,EAA5B,EAAgCF,OAAhC;AACA,UAAOA,OAAP;AACA;;;iCACcE,E,EAAG;AACjB,OAAIC,YAAY,KAAKC,YAAL,EAAhB;AACA,OAAGD,SAAH,EAAa;AACZ,SAAKR,WAAL,EAAkBM,GAAlB,CAAsBE,SAAtB,EAAiCD,EAAjC;AACA,SAAKP,WAAL,EAAkBM,GAAlB,CAAsBC,EAAtB,EAA0BC,SAA1B;AACA,WAAO,IAAP;AACA;AACD,QAAKR,WAAL,EAAkBM,GAAlB,CAAsBC,EAAtB,EAA0BN,eAAeS,QAAzC;AACA,UAAO,KAAP;AACA;;;iCACa;AAAA;AAAA;AAAA;;AAAA;AACb,yBAAkC,KAAKV,WAAL,CAAlC,8HAAoD;AAAA;AAAA,SAA3CW,SAA2C;AAAA,SAAhCH,SAAgC;;AACnD,SAAGA,cAAcP,eAAeS,QAAhC,EAA0C,OAAOC,SAAP;AAC1C;AAHY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIb,UAAO,KAAP;AACA;;;mCACgBJ,E,EAAG;AACnB,UAAO,KAAKP,WAAL,EAAkBY,GAAlB,CAAsBL,EAAtB,CAAP;AACA;;;iCACcA,E,EAAG;AACjB,UAAO,KAAKT,SAAL,EAAgBc,GAAhB,CAAoBL,EAApB,CAAP;AACA;;;qCACkBA,E,EAAG;AACrB,OAAIF,UAAU,KAAKP,SAAL,EAAgBc,GAAhB,CAAoBL,EAApB,CAAd;AACA,OAAGF,OAAH,EAAW;AACVA,YAAQQ,KAAR;AACA,SAAKf,SAAL,EAAgBgB,MAAhB,CAAuBP,EAAvB;AACA,SAAKP,WAAL,EAAkBc,MAAlB,CAAyBP,EAAzB;AACA;AACD;;;;;;AAEFN,eAAeS,QAAf,GAA0B,QAA1B;;AAEAK,OAAOC,OAAP,GAAef,cAAf","file":"session-manager.js","sourcesContent":["const Session = require('./session.js');\r\nconst _sessions = Symbol();\r\nconst _partnerMap = Symbol();\r\nclass SessionManager{\r\n\tconstructor(){\r\n\t\tthis[_sessions] = new Map();\r\n\t\tthis[_partnerMap] = new Map();\r\n\t}\r\n\taddSession(cliSocket, events){\r\n\t\tlet session = new Session(cliSocket, events);\r\n\t\tthis[_sessions].set(session.id, session);\r\n\t\treturn session;\r\n\t}\r\n\tsetPartnerById(id){\r\n\t\tlet partnerId = this._findPartner();\r\n\t\tif(partnerId){\r\n\t\t\tthis[_partnerMap].set(partnerId, id);\r\n\t\t\tthis[_partnerMap].set(id, partnerId);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis[_partnerMap].set(id, SessionManager.SERVERID);\r\n\t\treturn false;\r\n\t}\r\n\t_findPartner(){\r\n\t\tfor(let [sessionId, partnerId] of this[_partnerMap]){\r\n\t\t\tif(partnerId === SessionManager.SERVERID) return sessionId;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tgetPartnerIdById(id){\r\n\t\treturn this[_partnerMap].get(id);\r\n\t}\r\n\tgetSessionById(id){\r\n\t\treturn this[_sessions].get(id);\r\n\t}\r\n\tdestroySessionById(id){\r\n\t\tlet session = this[_sessions].get(id);\r\n\t\tif(session){\r\n\t\t\tsession.close();\r\n\t\t\tthis[_sessions].delete(id);\r\n\t\t\tthis[_partnerMap].delete(id);\r\n\t\t}\r\n\t}\r\n}\r\nSessionManager.SERVERID = 'system';\r\n\r\nmodule.exports=SessionManager;\r\n"]}